/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package td2;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Map.Entry;
import java.util.function.Function;
import java.util.function.Predicate;

import java.util.*;
import java.util.function.BinaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import td2.universite.Annee;
import td2.universite.Etudiant;
import td2.universite.Matiere;
import td2.universite.UE;

public class App {

    public static final Function<Annee , Stream<Matiere>> matieresA = annee -> { return annee.ues().stream().map(UE::ects).flatMap(mat->mat.keySet().stream());};


    public static final Function<Etudiant, Stream<Map.Entry<Matiere, Integer>>> matieresCoefE_ = etudiant -> {return etudiant.annee().ues().stream().map(UE::ects).flatMap(x->x.entrySet().stream());};

    public static final Function<Map.Entry<Matiere, Integer>, Paire<Matiere, Integer>> entry2paire= matiereIntegerEntry -> {return new Paire<>(matiereIntegerEntry.getKey(), matiereIntegerEntry.getValue());};

    public static final Function<Etudiant, Stream<Paire<Matiere, Integer>>> matieresCoefE = etudiant -> {return matieresCoefE_.apply(etudiant).map(entry2paire);};

    public static final BinaryOperator<Paire<Double, Integer>> accumulateurMoyenne =(x,y)-> {return new Paire<Double, Integer>(x.fst+ y.fst * y.snd,x.snd + y.snd);};

    public static final Paire<Double, Integer> zero(){
        Paire<Double, Integer> doubleIntegerPaire = new Paire<>(0.0, 0);
        return doubleIntegerPaire;
    }
    public static final Function<Etudiant, List<Paire<Double, Integer>>> notesPonderees =etudiant ->
    {
        List<Paire<Double, Integer>> list = new ArrayList<>();
        list.add(new Paire<Double, Integer>(etudiant.notes().values().iterator().next(),matieresCoefE.apply(etudiant).iterator().next().snd()));
        return list;
    };





}
